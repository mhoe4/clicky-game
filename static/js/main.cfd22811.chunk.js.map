{"version":3,"sources":["components/Image/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["Image","props","react_default","a","createElement","className","onClick","clickImage","id","alt","name","src","image","Wrapper","children","Title","clickedImages","score","topScore","App","state","images","find","element","console","log","length","_this","setState","push","concat","shuffle","_this2","this","components_Wrapper","components_Title","map","friend","components_Image","key","Component","array","i","j","Math","floor","random","_ref","ReactDOM","render","src_App","document","getElementById"],"mappings":"wxDAceA,MAXf,SAAeC,GACX,OAEIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBC,QAAS,kBAAML,EAAMM,WAAWN,EAAMO,MACjEN,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,iBCDlCC,MAJf,SAAiBZ,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,iBCG1BC,MAJf,SAAed,GACb,OAAOC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMa,kBCElCE,EAAgB,GAChBC,EAAQ,EACRC,EAAW,EAETC,6MAEJC,MAAQ,CACNC,SACAJ,QACAC,cAGFX,WAAa,SAAAC,GAOPQ,EAAcM,KALlB,SAAoBC,GAClB,OAAOA,IAAYf,KAKnBgB,QAAQC,IAAI,4BAGRR,EAAQC,IACVA,EAAWD,GAIbA,EAAQ,EACRD,EAAcU,OAAS,EAGvBC,EAAKC,SAAS,CAAEX,QAAOC,eAGvBM,QAAQC,IAAI,0BAGZR,IAEAD,EAAca,KAAKrB,IAGrBgB,QAAQC,IAAR,kBAAAK,OAA8Bd,EAA9B,YAAAc,OAAsDb,IAGtDc,EAAQV,GAGRM,EAAKC,SAAS,CAAEP,oFAIT,IAAAW,EAAAC,KACP,OACE/B,EAAAC,EAAAC,cAAC8B,EAAD,KACEhC,EAAAC,EAAAC,cAAC+B,EAAD,oBACCF,KAAKb,MAAMC,OAAOe,IAAI,SAAAC,GAAM,OAC3BnC,EAAAC,EAAAC,cAACkC,EAAD,CACE/B,WAAYyB,EAAKzB,WACjBC,GAAI6B,EAAO7B,GACX+B,IAAKF,EAAO7B,GACZE,KAAM2B,EAAO3B,KACbE,MAAOyB,EAAOzB,kBA3DR4B,aAmEdT,EAAU,SAACU,GACb,IAAK,IAAIC,EAAID,EAAMf,OAAS,EAAGgB,EAAI,EAAGA,IAAK,CACzC,IAAMC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IADDK,EAElB,CAACN,EAAME,GAAIF,EAAMC,IAAvCD,EAAMC,GAFkCK,EAAA,GAE9BN,EAAME,GAFwBI,EAAA,GAI3C,OAAON,GAGMtB,UChFf6B,IAASC,OAAO/C,EAAAC,EAAAC,cAAC8C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.cfd22811.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Image(props) {\n    return (\n        // <div role=\"img\" aria-label=\"click item\" class=\"click-item\" style=\"background-image: url(&quot;/assets/images/rick.png&quot;);\"></div>\n        <div className=\"card\">\n            <div className=\"img-container\" onClick={() => props.clickImage(props.id)}>\n                <img alt={props.name} src={props.image} />\n            </div>\n        </div>\n  );\n}\n\nexport default Image;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport Image from \"./components/Image\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport images from \"./images.json\";\n\nlet clickedImages = [];\nlet score = 0;\nlet topScore = 0;\n\nclass App extends Component {\n  // Setting this.state.images to the images json array\n  state = {\n    images,\n    score,\n    topScore\n  };\n\n  clickImage = id => {\n    //returns true if element matches id\n    function checkForId(element) {\n      return element === id;\n    }\n\n    //returns true if the id of the clicked image is found in clickedImages array\n    if (clickedImages.find(checkForId)) {\n      console.log(\"You guessed incorrectly.\");\n\n      //if current score > top score... set new top score\n      if (score > topScore) {\n        topScore = score\n      }\n\n      //reset score and clickedImages array\n      score = 0;\n      clickedImages.length = 0;\n\n      //setState to render new scores\n      this.setState({ score, topScore });\n\n    } else { //image was clicked for the first time so...\n      console.log(\"You guessed correctly.\");\n\n      //increment score\n      score++;\n      //add id of image to clicked images array \n      clickedImages.push(id);\n    };\n\n    console.log(`clickedImages: ${clickedImages} score: ${score}`);\n\n    //shuffle images array\n    shuffle(images);\n    //console.log(images);\n    //setState to render shuffle on screen\n    this.setState({ images });\n  };\n\n  // Map over this.state.images and render a Image component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Clicky Game</Title>\n        {this.state.images.map(friend => (\n          <Image\n            clickImage={this.clickImage}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nlet shuffle = (array) => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}